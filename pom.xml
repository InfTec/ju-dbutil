<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>

	<!-- Makes project deployable on Central through sonatype -->
	<parent>
		<groupId>ch.inftec</groupId>
		<artifactId>jb</artifactId>
		<version>3.2</version>
	</parent>

	<groupId>ch.inftec.ju</groupId>
	<artifactId>ju-dbutil-parent</artifactId>
	<version>6.0</version>
	<packaging>pom</packaging>
	
	<description>
	Aggregator project that helps us combine ju-dbutil and the DB specific testing modules. 
	To avoid circular dependency cycles, we'll also include ju-db-testing here even though it might theoretically have another
	live cycle as ju-dbutil. On the other hand, the two have some cohesion, so it's probably not too bad.
	</description>

	<modules>
		<module>ju-dbutil</module>
		<module>ju-db-testing</module>
	</modules>	
	
	<properties>
		<version.ju-util>6.0-tbd</version.ju-util>
		<version.junit>4.12</version.junit>
		<version.hibernate>4.1.6.Final</version.hibernate>
		<version.derby>10.12.1.1</version.derby>
		<version.spring>4.2.5.RELEASE</version.spring>
		<version.spring.spring-data-jpa>1.10.1.RELEASE</version.spring.spring-data-jpa>
	</properties>
	
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>ju-dbutil</artifactId>
				<version>${project.version}</version>
			</dependency>
			
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>ju-db-testing</artifactId>
				<version>${project.version}</version>
			</dependency>
			
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>ju-util</artifactId>
				<version>${version.ju-util}</version>
			</dependency>
			
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${version.junit}</version>
			</dependency>
			
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-core</artifactId>
				<version>${version.hibernate}</version>
			</dependency>
			
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-entitymanager</artifactId>
				<version>${version.hibernate}</version>
			</dependency>
			
			<dependency>
				<groupId>org.apache.derby</groupId>
				<artifactId>derby</artifactId>
				<version>${version.derby}</version>
			</dependency>
			
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-jdbc</artifactId>
				<version>${version.spring}</version>
			</dependency>
			
			<dependency>
				<groupId>org.springframework.data</groupId>
				<artifactId>spring-data-jpa</artifactId>
				<version>${version.spring.spring-data-jpa}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>
	
	<profiles>
		<!-- Overwrites the specific ju-util version (set by versionoverride on deployment) to allow for workspace resolution in Eclipse -->
		<profile>
			<id>ju-workspaceResolution-ju</id>
			<properties>
				<version.ju-util>6.0</version.ju-util>
			</properties>
		</profile>
		
		<!-- Performs full DB specific tests -->
		<profile>
			<id>ju-dbTests</id>
			<modules>
				<module>ju-dbutil-test</module>
			</modules>
		</profile>
	</profiles>
</project>
